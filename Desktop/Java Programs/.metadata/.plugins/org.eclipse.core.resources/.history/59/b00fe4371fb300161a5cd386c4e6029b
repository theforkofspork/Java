package pong.main;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JFrame;
import javax.swing.JPanel;

import pong.graphics.DrawCenterRects;

public class Main extends JPanel implements KeyListener
{
	
	final static int width = 640, height = width/12*9;
	final int centerRectWidth = width/36, centerRectHeight = centerRectWidth*2;
	final int playerWidth = (width/36), playerHeight = (playerWidth*5);
	
	Rectangle playerOne = new Rectangle(0, height/2 - playerHeight / 2, playerWidth, playerHeight);
	Rectangle playerTwo = new Rectangle(width - playerWidth, height/2 - playerHeight / 2, playerWidth, playerHeight);
	int key;
	long timeBuffer = 0;
	
	public void paintComponent(Graphics g)
	{
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D)g;
		this.addKeyListener(this);
		setFocusable(true);
		setBackground(Color.black);
		g.setColor(Color.white);
		
		new DrawCenterRects(g, width, height);
		g2.fill(playerOne);
		g2.fill(playerTwo);
	}
	
	
	public static void main(String[] args)
	{
		Main m = new Main();
		SetAttributes a = new SetAttributes();
		JFrame frame = new JFrame("Frame");
		
		a.setAttributes(frame, width, height, "Frame", m);
		frame.setVisible(true);
	}

	public void keyTyped(KeyEvent e) {}

	public void keyPressed(KeyEvent e) {
		
		key = e.getKeyCode();
		
		while(playerOne.y + playerHeight > height)
		{
			playerOne.setLocation(playerOne.x, playerOne.y - (height / 24));
		}
		while(playerTwo.y + playerHeight > height)
		{
			playerTwo.setLocation(playerTwo.x, playerTwo.y - (height / 24));
		}
		while(playerOne.y < 0)
		{
			playerOne.setLocation(playerOne.x, playerOne.y + (height / 24));
		}
		while(playerTwo.y < 0)
		{
			playerTwo.setLocation(playerTwo.x, playerTwo.y + (height / 24));
		}
		
		
		if(timeBuffer < System.currentTimeMillis())
		{
			if(key == KeyEvent.VK_UP)
			{
				playerTwo.setLocation(playerTwo.x, playerTwo.y - (height / 24));
			}
			if(key == KeyEvent.VK_DOWN)
			{
				playerTwo.setLocation(playerTwo.x, playerTwo.y + (height / 24));
			}
			if(key == KeyEvent.VK_W)
			{
				playerOne.setLocation(playerOne.x, playerOne.y - (height / 24));
			}
			if(key == KeyEvent.VK_S)
			{
				playerOne.setLocation(playerOne.x, playerOne.y + (height / 24));
			}
			repaint();
			timeBuffer = System.currentTimeMillis();
		}
		
	}

	public void keyReleased(KeyEvent e) {}
	
}
