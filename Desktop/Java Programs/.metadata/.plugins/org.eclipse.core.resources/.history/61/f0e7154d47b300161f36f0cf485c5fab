package pong.main;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JFrame;
import javax.swing.JPanel;

import pong.graphics.DrawCenterRects;

public class Main extends JPanel implements KeyListener
{
	
	final static int width = 640, height = width/12*9;
	final int centerRectWidth = width/36, centerRectHeight = centerRectWidth*2;
	final int playerWidth = (width/36), playerHeight = (playerWidth*5);
	
	Rectangle playerOne = new Rectangle(0, height/2 - playerHeight / 2, playerWidth, playerHeight);
	Rectangle playerTwo = new Rectangle(width - playerWidth, height/2 - playerHeight / 2, playerWidth, playerHeight);
	Rectangle ball = new Rectangle((width / 2) - ((width / 24) / 2), (height / 2) - ((height / 24) / 2), width / 24, width / 24);
	boolean startingSide = true;
	int key, xSpeed = 0, ySpeed = 0;
	int[] score = {0,0};
	long timeBuffer = 0;
	
	Thread gameThread = new Thread()
    {
        public void run()
        {
        	if(startingSide) xSpeed = -1;
    		else xSpeed = 1;
    		System.out.println("Thread started");
    		System.out.println(xSpeed);
    		System.out.println(ySpeed);
    		while(score[0 | 1] < 10)
    		{
    			//System.out.println("While loop running");
    			System.out.println(xSpeed);
    			System.out.println(ySpeed);
    			ball.setLocation(ball.x + xSpeed, ball.y + ySpeed);
    			repaint();
    		}
        }
    };
        
	
	public void paintComponent(Graphics g)
	{
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D)g;
		this.addKeyListener(this);
		setFocusable(true);
		setBackground(Color.black);
		g.setColor(Color.white);
		
		new DrawCenterRects(g, width, height);
		g2.fill(playerOne);
		g2.fill(playerTwo);
		g2.fill(ball);
	}
	
	
	public static void main(String[] args)
	{
		Main m = new Main();
		SetAttributes a = new SetAttributes();
		JFrame frame = new JFrame("Frame");
		
		a.setAttributes(frame, width, height, "Frame", m);
		frame.setVisible(true);
	}

	public void keyTyped(KeyEvent e) {}

	public void keyPressed(KeyEvent e) {
		
		key = e.getKeyCode();
		
		while(playerOne.y + playerHeight > height)
		{
			playerOne.setLocation(playerOne.x, playerOne.y - (height / 24));
		}
		while(playerTwo.y + playerHeight > height)
		{
			playerTwo.setLocation(playerTwo.x, playerTwo.y - (height / 24));
		}
		while(playerOne.y < 0)
		{
			playerOne.setLocation(playerOne.x, playerOne.y + (height / 24));
		}
		while(playerTwo.y < 0)
		{
			playerTwo.setLocation(playerTwo.x, playerTwo.y + (height / 24));
		}
		
		
		if(timeBuffer < System.currentTimeMillis())
		{
			if(key == KeyEvent.VK_K)
			{
				playerTwo.setLocation(playerTwo.x, playerTwo.y - (height / 18));
			}
			if(key == KeyEvent.VK_M)
			{
				playerTwo.setLocation(playerTwo.x, playerTwo.y + (height / 18));
			}
			if(key == KeyEvent.VK_W)
			{
				playerOne.setLocation(playerOne.x, playerOne.y - (height / 18));
			}
			if(key == KeyEvent.VK_A)
			{
				playerOne.setLocation(playerOne.x, playerOne.y + (height / 18));
			}
			repaint();
			timeBuffer = System.currentTimeMillis();
		}
		
		if(key == KeyEvent.VK_SPACE){
			gameThread.run();
		}
		
	}

	public void keyReleased(KeyEvent e) {}
}
